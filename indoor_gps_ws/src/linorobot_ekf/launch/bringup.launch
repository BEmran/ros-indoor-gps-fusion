<launch>
    <!-- Start ROS communication between the robot's computer and Linorobot base -->
    <node pkg="rosserial_python" name="rosserial_lino" type="serial_node.py" output="screen">
        <param name="port" value="/dev/wheelchairbase" />
        <param name="baud" value="57600" />
    </node>

    <!-- IMU Relay and Filter -->
    <include file="$(find linorobot_ekf)/launch/include/imu/imu.launch" />

    <!-- Publish Linorobot odometry -->
    <node pkg="linorobot_ekf" name="lino_base_node" type="lino_base_node"></node>

    <!-- Publish static transform from base_footprint to base_link -->
    <node pkg="tf" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0.098 0 0 0  /base_footprint /base_link  100"/>

    <!-- Publish static transforms for the ultrasonic beacon system -->
    <node pkg="tf" type="static_transform_publisher" name="beacon_imu_broadcaster" args="0 0 0 0 0 0 base_link beacon_imu_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="beacon_map_broadcaster" args="0 0 0 0 0 0 beacon_map map 100" />

    <!-- Odom-IMU Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_odom" clear_params="true"> 
        <rosparam command="load" file="$(find linorobot_ekf)/param/ekf/robot_localization_odom.yaml" />
    </node>

    <!-- AMCL and Beacon Extended Kalman Filter-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_map" clear_params="true"> 
        <rosparam command="load" file="$(find linorobot_ekf)/param/ekf/robot_localization_map.yaml" />
    </node>

    <!-- Run Linorobot compatible laser drivers -->
    <include file="$(find linorobot_ekf)/launch/include/laser.launch" />
</launch>
